
std::string filePath = client.getRequest().get_uri();
    std::string File_Name = Get_File_Name_From_URI();
    // std::cout << "File Name:" << File_Name << std::endl;
    // std::cout << "file path :" << filePath << std::endl;

    std::string File_Extension = Get_File_Extension(File_Name);

if (File_Extension == "php" || File_Extension == "py")
    {
            size_t pos;
            CGI cgi(client);
            cgi.set_environmentVariables(File_Name);
            cgi.run();
            if (cgi.status_code != 200)
            {
                Build_HTTP_Response(cgi.status_code);
                return;
            }

        std::string cgi_headers = extractHeaders(client.getResponse());
        pos = cgi_headers.find("Set-Cookie");
        if (pos != std::string::npos)
        {
            cgi_headers = cgi_headers.substr(pos);
            pos = cgi_headers.find("\r\n");
            this->cookies = cgi_headers.substr(0, pos);
        }
        std::string response_cgi = client.getResponse();
        // std::cout << client.getResponse() << std::endl;
        std::string c_t = findContentType(response_cgi);

        // std::cout << "content type =====" << c_t << "@" << std::endl;

        client.setBODY(extractBody(client.getResponse()));
        std::stringstream ss;
        ss << client.getBODY().length();
        std::string body_length = ss.str();
        client.setHEADER(Build_HTTP_Response_Header(200, c_t, body_length));
        return;
    }